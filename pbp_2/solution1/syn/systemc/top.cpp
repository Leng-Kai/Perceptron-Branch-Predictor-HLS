// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> top::ap_ST_fsm_state1 = "1";
const sc_lv<3> top::ap_ST_fsm_state2 = "10";
const sc_lv<3> top::ap_ST_fsm_state3 = "100";
const sc_lv<32> top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> top::ap_const_lv1_0 = "0";
const int top::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> top::ap_const_lv32_1 = "1";
const sc_lv<32> top::ap_const_lv32_2 = "10";
const sc_lv<1> top::ap_const_lv1_1 = "1";
const sc_lv<5> top::ap_const_lv5_0 = "00000";
const sc_lv<32> top::ap_const_lv32_5 = "101";
const sc_lv<6> top::ap_const_lv6_0 = "000000";
const sc_lv<6> top::ap_const_lv6_8 = "1000";
const sc_lv<4> top::ap_const_lv4_9 = "1001";
const sc_lv<4> top::ap_const_lv4_F = "1111";
const sc_lv<4> top::ap_const_lv4_6 = "110";
const sc_lv<4> top::ap_const_lv4_1 = "1";
const sc_lv<4> top::ap_const_lv4_E = "1110";
const sc_lv<4> top::ap_const_lv4_2 = "10";
const bool top::ap_const_boolean_1 = true;

top::top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    perceptron_V_4_U = new top_perceptron_V_4("perceptron_V_4_U");
    perceptron_V_4_U->clk(ap_clk);
    perceptron_V_4_U->reset(ap_rst_n_inv);
    perceptron_V_4_U->address0(perceptron_V_4_address0);
    perceptron_V_4_U->ce0(perceptron_V_4_ce0);
    perceptron_V_4_U->we0(perceptron_V_4_we0);
    perceptron_V_4_U->d0(perceptron_V_4_d0);
    perceptron_V_4_U->q0(perceptron_V_4_q0);
    perceptron_V_0_U = new top_perceptron_V_4("perceptron_V_0_U");
    perceptron_V_0_U->clk(ap_clk);
    perceptron_V_0_U->reset(ap_rst_n_inv);
    perceptron_V_0_U->address0(perceptron_V_0_address0);
    perceptron_V_0_U->ce0(perceptron_V_0_ce0);
    perceptron_V_0_U->we0(perceptron_V_0_we0);
    perceptron_V_0_U->d0(perceptron_V_0_d0);
    perceptron_V_0_U->q0(perceptron_V_0_q0);
    perceptron_V_1_U = new top_perceptron_V_4("perceptron_V_1_U");
    perceptron_V_1_U->clk(ap_clk);
    perceptron_V_1_U->reset(ap_rst_n_inv);
    perceptron_V_1_U->address0(perceptron_V_1_address0);
    perceptron_V_1_U->ce0(perceptron_V_1_ce0);
    perceptron_V_1_U->we0(perceptron_V_1_we0);
    perceptron_V_1_U->d0(perceptron_V_1_d0);
    perceptron_V_1_U->q0(perceptron_V_1_q0);
    perceptron_V_2_U = new top_perceptron_V_4("perceptron_V_2_U");
    perceptron_V_2_U->clk(ap_clk);
    perceptron_V_2_U->reset(ap_rst_n_inv);
    perceptron_V_2_U->address0(perceptron_V_2_address0);
    perceptron_V_2_U->ce0(perceptron_V_2_ce0);
    perceptron_V_2_U->we0(perceptron_V_2_we0);
    perceptron_V_2_U->d0(perceptron_V_2_d0);
    perceptron_V_2_U->q0(perceptron_V_2_q0);
    perceptron_V_3_U = new top_perceptron_V_4("perceptron_V_3_U");
    perceptron_V_3_U->clk(ap_clk);
    perceptron_V_3_U->reset(ap_rst_n_inv);
    perceptron_V_3_U->address0(perceptron_V_3_address0);
    perceptron_V_3_U->ce0(perceptron_V_3_ce0);
    perceptron_V_3_U->we0(perceptron_V_3_we0);
    perceptron_V_3_U->d0(perceptron_V_3_d0);
    perceptron_V_3_U->q0(perceptron_V_3_q0);
    top_bp0_s_axi_U = new top_bp0_s_axi<C_S_AXI_BP0_ADDR_WIDTH,C_S_AXI_BP0_DATA_WIDTH>("top_bp0_s_axi_U");
    top_bp0_s_axi_U->AWVALID(s_axi_bp0_AWVALID);
    top_bp0_s_axi_U->AWREADY(s_axi_bp0_AWREADY);
    top_bp0_s_axi_U->AWADDR(s_axi_bp0_AWADDR);
    top_bp0_s_axi_U->WVALID(s_axi_bp0_WVALID);
    top_bp0_s_axi_U->WREADY(s_axi_bp0_WREADY);
    top_bp0_s_axi_U->WDATA(s_axi_bp0_WDATA);
    top_bp0_s_axi_U->WSTRB(s_axi_bp0_WSTRB);
    top_bp0_s_axi_U->ARVALID(s_axi_bp0_ARVALID);
    top_bp0_s_axi_U->ARREADY(s_axi_bp0_ARREADY);
    top_bp0_s_axi_U->ARADDR(s_axi_bp0_ARADDR);
    top_bp0_s_axi_U->RVALID(s_axi_bp0_RVALID);
    top_bp0_s_axi_U->RREADY(s_axi_bp0_RREADY);
    top_bp0_s_axi_U->RDATA(s_axi_bp0_RDATA);
    top_bp0_s_axi_U->RRESP(s_axi_bp0_RRESP);
    top_bp0_s_axi_U->BVALID(s_axi_bp0_BVALID);
    top_bp0_s_axi_U->BREADY(s_axi_bp0_BREADY);
    top_bp0_s_axi_U->BRESP(s_axi_bp0_BRESP);
    top_bp0_s_axi_U->ACLK(ap_clk);
    top_bp0_s_axi_U->ARESET(ap_rst_n_inv);
    top_bp0_s_axi_U->ACLK_EN(ap_var_for_const0);
    top_bp0_s_axi_U->pc_V(pc_V);
    top_bp0_s_axi_U->isBranch_V(isBranch_V);
    top_bp0_s_axi_U->isBranch_V_ap_vld(isBranch_V_ap_vld);
    top_bp0_s_axi_U->result_V(result_V);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln700_1_fu_384_p2);
    sensitive << ( perceptron_V_0_load_reg_513 );

    SC_METHOD(thread_add_ln700_2_fu_362_p2);
    sensitive << ( perceptron_V_1_load_reg_521 );

    SC_METHOD(thread_add_ln700_3_fu_432_p2);
    sensitive << ( perceptron_V_2_load_reg_544 );

    SC_METHOD(thread_add_ln700_4_fu_410_p2);
    sensitive << ( perceptron_V_3_load_reg_552 );

    SC_METHOD(thread_add_ln700_fu_336_p2);
    sensitive << ( t_V_reg_491 );

    SC_METHOD(thread_add_ln701_1_fu_373_p2);
    sensitive << ( perceptron_V_0_load_reg_513 );

    SC_METHOD(thread_add_ln701_2_fu_351_p2);
    sensitive << ( perceptron_V_1_load_reg_521 );

    SC_METHOD(thread_add_ln701_3_fu_421_p2);
    sensitive << ( perceptron_V_2_load_reg_544 );

    SC_METHOD(thread_add_ln701_4_fu_399_p2);
    sensitive << ( perceptron_V_3_load_reg_552 );

    SC_METHOD(thread_add_ln701_fu_325_p2);
    sensitive << ( t_V_reg_491 );

    SC_METHOD(thread_add_ln70_1_fu_273_p2);
    sensitive << ( sext_ln70_fu_269_p1 );
    sensitive << ( sext_ln1352_1_fu_241_p1 );

    SC_METHOD(thread_add_ln70_fu_263_p2);
    sensitive << ( select_ln1352_1_fu_255_p3 );
    sensitive << ( sext_ln60_fu_175_p1 );

    SC_METHOD(thread_and_ln15_fu_314_p2);
    sensitive << ( icmp_ln15_fu_308_p2 );
    sensitive << ( xor_ln15_fu_304_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_444);
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );

    SC_METHOD(thread_ap_condition_450);
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );

    SC_METHOD(thread_ap_condition_455);
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );

    SC_METHOD(thread_ap_condition_460);
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_icmp_ln15_fu_308_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( select_ln74_fu_298_p3 );

    SC_METHOD(thread_icmp_ln887_1_fu_379_p2);
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( perceptron_V_0_load_reg_513 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_fu_342_p2 );

    SC_METHOD(thread_icmp_ln887_2_fu_357_p2);
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( perceptron_V_1_load_reg_521 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_fu_342_p2 );

    SC_METHOD(thread_icmp_ln887_3_fu_427_p2);
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( perceptron_V_2_load_reg_544 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_1_fu_390_p2 );

    SC_METHOD(thread_icmp_ln887_4_fu_405_p2);
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( perceptron_V_3_load_reg_552 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_1_fu_390_p2 );

    SC_METHOD(thread_icmp_ln887_fu_331_p2);
    sensitive << ( result_V_read_reg_483 );
    sensitive << ( t_V_reg_491 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );

    SC_METHOD(thread_icmp_ln895_1_fu_368_p2);
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( perceptron_V_0_load_reg_513 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_fu_342_p2 );

    SC_METHOD(thread_icmp_ln895_2_fu_346_p2);
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( perceptron_V_1_load_reg_521 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_fu_342_p2 );

    SC_METHOD(thread_icmp_ln895_3_fu_416_p2);
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( perceptron_V_2_load_reg_544 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_1_fu_390_p2 );

    SC_METHOD(thread_icmp_ln895_4_fu_394_p2);
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( perceptron_V_3_load_reg_552 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_1_fu_390_p2 );

    SC_METHOD(thread_icmp_ln895_fu_320_p2);
    sensitive << ( result_V_read_reg_483 );
    sensitive << ( t_V_reg_491 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );

    SC_METHOD(thread_index_V_fu_162_p1);
    sensitive << ( pc_V );

    SC_METHOD(thread_isBranch_V);
    sensitive << ( tmp_reg_566 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_isBranch_V_ap_vld);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_perceptron_V_0_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( perceptron_V_0_addr_reg_463 );
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( zext_ln544_fu_166_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_fu_342_p2 );
    sensitive << ( icmp_ln895_1_fu_368_p2 );
    sensitive << ( icmp_ln887_1_fu_379_p2 );

    SC_METHOD(thread_perceptron_V_0_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_fu_342_p2 );
    sensitive << ( icmp_ln895_1_fu_368_p2 );
    sensitive << ( icmp_ln887_1_fu_379_p2 );

    SC_METHOD(thread_perceptron_V_0_d0);
    sensitive << ( xor_ln879_fu_342_p2 );
    sensitive << ( icmp_ln895_1_fu_368_p2 );
    sensitive << ( add_ln701_1_fu_373_p2 );
    sensitive << ( icmp_ln887_1_fu_379_p2 );
    sensitive << ( add_ln700_1_fu_384_p2 );
    sensitive << ( ap_condition_444 );

    SC_METHOD(thread_perceptron_V_0_we0);
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_fu_342_p2 );
    sensitive << ( icmp_ln895_1_fu_368_p2 );
    sensitive << ( icmp_ln887_1_fu_379_p2 );

    SC_METHOD(thread_perceptron_V_1_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( perceptron_V_1_addr_reg_468 );
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( zext_ln544_fu_166_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_fu_342_p2 );
    sensitive << ( icmp_ln895_2_fu_346_p2 );
    sensitive << ( icmp_ln887_2_fu_357_p2 );

    SC_METHOD(thread_perceptron_V_1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_fu_342_p2 );
    sensitive << ( icmp_ln895_2_fu_346_p2 );
    sensitive << ( icmp_ln887_2_fu_357_p2 );

    SC_METHOD(thread_perceptron_V_1_d0);
    sensitive << ( xor_ln879_fu_342_p2 );
    sensitive << ( icmp_ln895_2_fu_346_p2 );
    sensitive << ( add_ln701_2_fu_351_p2 );
    sensitive << ( icmp_ln887_2_fu_357_p2 );
    sensitive << ( add_ln700_2_fu_362_p2 );
    sensitive << ( ap_condition_450 );

    SC_METHOD(thread_perceptron_V_1_we0);
    sensitive << ( xor_ln60_reg_509 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_fu_342_p2 );
    sensitive << ( icmp_ln895_2_fu_346_p2 );
    sensitive << ( icmp_ln887_2_fu_357_p2 );

    SC_METHOD(thread_perceptron_V_2_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( perceptron_V_2_addr_reg_473 );
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( zext_ln544_fu_166_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_1_fu_390_p2 );
    sensitive << ( icmp_ln895_3_fu_416_p2 );
    sensitive << ( icmp_ln887_3_fu_427_p2 );

    SC_METHOD(thread_perceptron_V_2_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_1_fu_390_p2 );
    sensitive << ( icmp_ln895_3_fu_416_p2 );
    sensitive << ( icmp_ln887_3_fu_427_p2 );

    SC_METHOD(thread_perceptron_V_2_d0);
    sensitive << ( xor_ln879_1_fu_390_p2 );
    sensitive << ( icmp_ln895_3_fu_416_p2 );
    sensitive << ( add_ln701_3_fu_421_p2 );
    sensitive << ( icmp_ln887_3_fu_427_p2 );
    sensitive << ( add_ln700_3_fu_432_p2 );
    sensitive << ( ap_condition_455 );

    SC_METHOD(thread_perceptron_V_2_we0);
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_1_fu_390_p2 );
    sensitive << ( icmp_ln895_3_fu_416_p2 );
    sensitive << ( icmp_ln887_3_fu_427_p2 );

    SC_METHOD(thread_perceptron_V_3_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( perceptron_V_3_addr_reg_478 );
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( zext_ln544_fu_166_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_1_fu_390_p2 );
    sensitive << ( icmp_ln895_4_fu_394_p2 );
    sensitive << ( icmp_ln887_4_fu_405_p2 );

    SC_METHOD(thread_perceptron_V_3_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_1_fu_390_p2 );
    sensitive << ( icmp_ln895_4_fu_394_p2 );
    sensitive << ( icmp_ln887_4_fu_405_p2 );

    SC_METHOD(thread_perceptron_V_3_d0);
    sensitive << ( xor_ln879_1_fu_390_p2 );
    sensitive << ( icmp_ln895_4_fu_394_p2 );
    sensitive << ( add_ln701_4_fu_399_p2 );
    sensitive << ( icmp_ln887_4_fu_405_p2 );
    sensitive << ( add_ln700_4_fu_410_p2 );
    sensitive << ( ap_condition_460 );

    SC_METHOD(thread_perceptron_V_3_we0);
    sensitive << ( xor_ln60_1_reg_540 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( xor_ln879_1_fu_390_p2 );
    sensitive << ( icmp_ln895_4_fu_394_p2 );
    sensitive << ( icmp_ln887_4_fu_405_p2 );

    SC_METHOD(thread_perceptron_V_4_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( perceptron_V_4_addr_reg_458 );
    sensitive << ( result_V_read_reg_483 );
    sensitive << ( zext_ln544_fu_166_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( icmp_ln895_fu_320_p2 );
    sensitive << ( icmp_ln887_fu_331_p2 );

    SC_METHOD(thread_perceptron_V_4_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( result_V_read_reg_483 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( icmp_ln895_fu_320_p2 );
    sensitive << ( icmp_ln887_fu_331_p2 );

    SC_METHOD(thread_perceptron_V_4_d0);
    sensitive << ( result_V_read_reg_483 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( icmp_ln895_fu_320_p2 );
    sensitive << ( add_ln701_fu_325_p2 );
    sensitive << ( icmp_ln887_fu_331_p2 );
    sensitive << ( add_ln700_fu_336_p2 );

    SC_METHOD(thread_perceptron_V_4_we0);
    sensitive << ( result_V_read_reg_483 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln15_fu_314_p2 );
    sensitive << ( icmp_ln895_fu_320_p2 );
    sensitive << ( icmp_ln887_fu_331_p2 );

    SC_METHOD(thread_select_ln1352_1_fu_255_p3);
    sensitive << ( bht_2 );
    sensitive << ( sext_ln1352_2_fu_245_p1 );
    sensitive << ( sub_ln1352_1_fu_249_p2 );

    SC_METHOD(thread_select_ln1352_fu_233_p3);
    sensitive << ( bht_0 );
    sensitive << ( sext_ln1352_fu_223_p1 );
    sensitive << ( sub_ln1352_fu_227_p2 );

    SC_METHOD(thread_select_ln60_1_fu_215_p3);
    sensitive << ( perceptron_V_2_q0 );
    sensitive << ( perceptron_V_3_q0 );
    sensitive << ( xor_ln60_1_fu_209_p2 );

    SC_METHOD(thread_select_ln60_fu_193_p3);
    sensitive << ( perceptron_V_0_q0 );
    sensitive << ( perceptron_V_1_q0 );
    sensitive << ( xor_ln60_fu_187_p2 );

    SC_METHOD(thread_select_ln74_fu_298_p3);
    sensitive << ( add_ln70_1_reg_560 );
    sensitive << ( tmp_reg_566 );
    sensitive << ( sub_ln74_fu_293_p2 );

    SC_METHOD(thread_sext_ln1352_1_fu_241_p1);
    sensitive << ( select_ln1352_fu_233_p3 );

    SC_METHOD(thread_sext_ln1352_2_fu_245_p1);
    sensitive << ( select_ln60_1_fu_215_p3 );

    SC_METHOD(thread_sext_ln1352_fu_223_p1);
    sensitive << ( select_ln60_fu_193_p3 );

    SC_METHOD(thread_sext_ln60_fu_175_p0);
    sensitive << ( perceptron_V_4_q0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sext_ln60_fu_175_p1);
    sensitive << ( sext_ln60_fu_175_p0 );

    SC_METHOD(thread_sext_ln70_fu_269_p1);
    sensitive << ( add_ln70_fu_263_p2 );

    SC_METHOD(thread_sub_ln1352_1_fu_249_p2);
    sensitive << ( sext_ln1352_2_fu_245_p1 );

    SC_METHOD(thread_sub_ln1352_fu_227_p2);
    sensitive << ( sext_ln1352_fu_223_p1 );

    SC_METHOD(thread_sub_ln74_fu_293_p2);
    sensitive << ( add_ln70_1_reg_560 );

    SC_METHOD(thread_xor_ln15_fu_304_p2);
    sensitive << ( result_V_read_reg_483 );
    sensitive << ( tmp_reg_566 );

    SC_METHOD(thread_xor_ln60_1_fu_209_p2);
    sensitive << ( bht_2 );
    sensitive << ( bht_3 );

    SC_METHOD(thread_xor_ln60_fu_187_p2);
    sensitive << ( bht_0 );
    sensitive << ( bht_1 );

    SC_METHOD(thread_xor_ln879_1_fu_390_p2);
    sensitive << ( result_V_read_reg_483 );
    sensitive << ( bht_2_load_reg_529 );

    SC_METHOD(thread_xor_ln879_fu_342_p2);
    sensitive << ( result_V_read_reg_483 );
    sensitive << ( bht_0_load_reg_499 );

    SC_METHOD(thread_zext_ln544_fu_166_p1);
    sensitive << ( index_V_fu_162_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "001";
    bht_0 = "0";
    bht_1 = "0";
    bht_2 = "0";
    bht_3 = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, s_axi_bp0_AWVALID, "(port)s_axi_bp0_AWVALID");
    sc_trace(mVcdFile, s_axi_bp0_AWREADY, "(port)s_axi_bp0_AWREADY");
    sc_trace(mVcdFile, s_axi_bp0_AWADDR, "(port)s_axi_bp0_AWADDR");
    sc_trace(mVcdFile, s_axi_bp0_WVALID, "(port)s_axi_bp0_WVALID");
    sc_trace(mVcdFile, s_axi_bp0_WREADY, "(port)s_axi_bp0_WREADY");
    sc_trace(mVcdFile, s_axi_bp0_WDATA, "(port)s_axi_bp0_WDATA");
    sc_trace(mVcdFile, s_axi_bp0_WSTRB, "(port)s_axi_bp0_WSTRB");
    sc_trace(mVcdFile, s_axi_bp0_ARVALID, "(port)s_axi_bp0_ARVALID");
    sc_trace(mVcdFile, s_axi_bp0_ARREADY, "(port)s_axi_bp0_ARREADY");
    sc_trace(mVcdFile, s_axi_bp0_ARADDR, "(port)s_axi_bp0_ARADDR");
    sc_trace(mVcdFile, s_axi_bp0_RVALID, "(port)s_axi_bp0_RVALID");
    sc_trace(mVcdFile, s_axi_bp0_RREADY, "(port)s_axi_bp0_RREADY");
    sc_trace(mVcdFile, s_axi_bp0_RDATA, "(port)s_axi_bp0_RDATA");
    sc_trace(mVcdFile, s_axi_bp0_RRESP, "(port)s_axi_bp0_RRESP");
    sc_trace(mVcdFile, s_axi_bp0_BVALID, "(port)s_axi_bp0_BVALID");
    sc_trace(mVcdFile, s_axi_bp0_BREADY, "(port)s_axi_bp0_BREADY");
    sc_trace(mVcdFile, s_axi_bp0_BRESP, "(port)s_axi_bp0_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, pc_V, "pc_V");
    sc_trace(mVcdFile, isBranch_V, "isBranch_V");
    sc_trace(mVcdFile, isBranch_V_ap_vld, "isBranch_V_ap_vld");
    sc_trace(mVcdFile, result_V, "result_V");
    sc_trace(mVcdFile, perceptron_V_4_address0, "perceptron_V_4_address0");
    sc_trace(mVcdFile, perceptron_V_4_ce0, "perceptron_V_4_ce0");
    sc_trace(mVcdFile, perceptron_V_4_we0, "perceptron_V_4_we0");
    sc_trace(mVcdFile, perceptron_V_4_d0, "perceptron_V_4_d0");
    sc_trace(mVcdFile, perceptron_V_4_q0, "perceptron_V_4_q0");
    sc_trace(mVcdFile, bht_0, "bht_0");
    sc_trace(mVcdFile, bht_1, "bht_1");
    sc_trace(mVcdFile, perceptron_V_0_address0, "perceptron_V_0_address0");
    sc_trace(mVcdFile, perceptron_V_0_ce0, "perceptron_V_0_ce0");
    sc_trace(mVcdFile, perceptron_V_0_we0, "perceptron_V_0_we0");
    sc_trace(mVcdFile, perceptron_V_0_d0, "perceptron_V_0_d0");
    sc_trace(mVcdFile, perceptron_V_0_q0, "perceptron_V_0_q0");
    sc_trace(mVcdFile, perceptron_V_1_address0, "perceptron_V_1_address0");
    sc_trace(mVcdFile, perceptron_V_1_ce0, "perceptron_V_1_ce0");
    sc_trace(mVcdFile, perceptron_V_1_we0, "perceptron_V_1_we0");
    sc_trace(mVcdFile, perceptron_V_1_d0, "perceptron_V_1_d0");
    sc_trace(mVcdFile, perceptron_V_1_q0, "perceptron_V_1_q0");
    sc_trace(mVcdFile, bht_2, "bht_2");
    sc_trace(mVcdFile, bht_3, "bht_3");
    sc_trace(mVcdFile, perceptron_V_2_address0, "perceptron_V_2_address0");
    sc_trace(mVcdFile, perceptron_V_2_ce0, "perceptron_V_2_ce0");
    sc_trace(mVcdFile, perceptron_V_2_we0, "perceptron_V_2_we0");
    sc_trace(mVcdFile, perceptron_V_2_d0, "perceptron_V_2_d0");
    sc_trace(mVcdFile, perceptron_V_2_q0, "perceptron_V_2_q0");
    sc_trace(mVcdFile, perceptron_V_3_address0, "perceptron_V_3_address0");
    sc_trace(mVcdFile, perceptron_V_3_ce0, "perceptron_V_3_ce0");
    sc_trace(mVcdFile, perceptron_V_3_we0, "perceptron_V_3_we0");
    sc_trace(mVcdFile, perceptron_V_3_d0, "perceptron_V_3_d0");
    sc_trace(mVcdFile, perceptron_V_3_q0, "perceptron_V_3_q0");
    sc_trace(mVcdFile, perceptron_V_4_addr_reg_458, "perceptron_V_4_addr_reg_458");
    sc_trace(mVcdFile, perceptron_V_0_addr_reg_463, "perceptron_V_0_addr_reg_463");
    sc_trace(mVcdFile, perceptron_V_1_addr_reg_468, "perceptron_V_1_addr_reg_468");
    sc_trace(mVcdFile, perceptron_V_2_addr_reg_473, "perceptron_V_2_addr_reg_473");
    sc_trace(mVcdFile, perceptron_V_3_addr_reg_478, "perceptron_V_3_addr_reg_478");
    sc_trace(mVcdFile, result_V_read_reg_483, "result_V_read_reg_483");
    sc_trace(mVcdFile, t_V_reg_491, "t_V_reg_491");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, bht_0_load_reg_499, "bht_0_load_reg_499");
    sc_trace(mVcdFile, bht_1_load_reg_504, "bht_1_load_reg_504");
    sc_trace(mVcdFile, xor_ln60_fu_187_p2, "xor_ln60_fu_187_p2");
    sc_trace(mVcdFile, xor_ln60_reg_509, "xor_ln60_reg_509");
    sc_trace(mVcdFile, perceptron_V_0_load_reg_513, "perceptron_V_0_load_reg_513");
    sc_trace(mVcdFile, perceptron_V_1_load_reg_521, "perceptron_V_1_load_reg_521");
    sc_trace(mVcdFile, bht_2_load_reg_529, "bht_2_load_reg_529");
    sc_trace(mVcdFile, bht_3_load_reg_535, "bht_3_load_reg_535");
    sc_trace(mVcdFile, xor_ln60_1_fu_209_p2, "xor_ln60_1_fu_209_p2");
    sc_trace(mVcdFile, xor_ln60_1_reg_540, "xor_ln60_1_reg_540");
    sc_trace(mVcdFile, perceptron_V_2_load_reg_544, "perceptron_V_2_load_reg_544");
    sc_trace(mVcdFile, perceptron_V_3_load_reg_552, "perceptron_V_3_load_reg_552");
    sc_trace(mVcdFile, add_ln70_1_fu_273_p2, "add_ln70_1_fu_273_p2");
    sc_trace(mVcdFile, add_ln70_1_reg_560, "add_ln70_1_reg_560");
    sc_trace(mVcdFile, tmp_reg_566, "tmp_reg_566");
    sc_trace(mVcdFile, zext_ln544_fu_166_p1, "zext_ln544_fu_166_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, and_ln15_fu_314_p2, "and_ln15_fu_314_p2");
    sc_trace(mVcdFile, icmp_ln895_fu_320_p2, "icmp_ln895_fu_320_p2");
    sc_trace(mVcdFile, add_ln701_fu_325_p2, "add_ln701_fu_325_p2");
    sc_trace(mVcdFile, icmp_ln887_fu_331_p2, "icmp_ln887_fu_331_p2");
    sc_trace(mVcdFile, add_ln700_fu_336_p2, "add_ln700_fu_336_p2");
    sc_trace(mVcdFile, xor_ln879_fu_342_p2, "xor_ln879_fu_342_p2");
    sc_trace(mVcdFile, icmp_ln895_1_fu_368_p2, "icmp_ln895_1_fu_368_p2");
    sc_trace(mVcdFile, add_ln701_1_fu_373_p2, "add_ln701_1_fu_373_p2");
    sc_trace(mVcdFile, icmp_ln887_1_fu_379_p2, "icmp_ln887_1_fu_379_p2");
    sc_trace(mVcdFile, add_ln700_1_fu_384_p2, "add_ln700_1_fu_384_p2");
    sc_trace(mVcdFile, icmp_ln895_2_fu_346_p2, "icmp_ln895_2_fu_346_p2");
    sc_trace(mVcdFile, add_ln701_2_fu_351_p2, "add_ln701_2_fu_351_p2");
    sc_trace(mVcdFile, icmp_ln887_2_fu_357_p2, "icmp_ln887_2_fu_357_p2");
    sc_trace(mVcdFile, add_ln700_2_fu_362_p2, "add_ln700_2_fu_362_p2");
    sc_trace(mVcdFile, xor_ln879_1_fu_390_p2, "xor_ln879_1_fu_390_p2");
    sc_trace(mVcdFile, icmp_ln895_3_fu_416_p2, "icmp_ln895_3_fu_416_p2");
    sc_trace(mVcdFile, add_ln701_3_fu_421_p2, "add_ln701_3_fu_421_p2");
    sc_trace(mVcdFile, icmp_ln887_3_fu_427_p2, "icmp_ln887_3_fu_427_p2");
    sc_trace(mVcdFile, add_ln700_3_fu_432_p2, "add_ln700_3_fu_432_p2");
    sc_trace(mVcdFile, icmp_ln895_4_fu_394_p2, "icmp_ln895_4_fu_394_p2");
    sc_trace(mVcdFile, add_ln701_4_fu_399_p2, "add_ln701_4_fu_399_p2");
    sc_trace(mVcdFile, icmp_ln887_4_fu_405_p2, "icmp_ln887_4_fu_405_p2");
    sc_trace(mVcdFile, add_ln700_4_fu_410_p2, "add_ln700_4_fu_410_p2");
    sc_trace(mVcdFile, index_V_fu_162_p1, "index_V_fu_162_p1");
    sc_trace(mVcdFile, sext_ln60_fu_175_p0, "sext_ln60_fu_175_p0");
    sc_trace(mVcdFile, select_ln60_fu_193_p3, "select_ln60_fu_193_p3");
    sc_trace(mVcdFile, sext_ln1352_fu_223_p1, "sext_ln1352_fu_223_p1");
    sc_trace(mVcdFile, sub_ln1352_fu_227_p2, "sub_ln1352_fu_227_p2");
    sc_trace(mVcdFile, select_ln1352_fu_233_p3, "select_ln1352_fu_233_p3");
    sc_trace(mVcdFile, select_ln60_1_fu_215_p3, "select_ln60_1_fu_215_p3");
    sc_trace(mVcdFile, sext_ln1352_2_fu_245_p1, "sext_ln1352_2_fu_245_p1");
    sc_trace(mVcdFile, sub_ln1352_1_fu_249_p2, "sub_ln1352_1_fu_249_p2");
    sc_trace(mVcdFile, select_ln1352_1_fu_255_p3, "select_ln1352_1_fu_255_p3");
    sc_trace(mVcdFile, sext_ln60_fu_175_p1, "sext_ln60_fu_175_p1");
    sc_trace(mVcdFile, add_ln70_fu_263_p2, "add_ln70_fu_263_p2");
    sc_trace(mVcdFile, sext_ln70_fu_269_p1, "sext_ln70_fu_269_p1");
    sc_trace(mVcdFile, sext_ln1352_1_fu_241_p1, "sext_ln1352_1_fu_241_p1");
    sc_trace(mVcdFile, sub_ln74_fu_293_p2, "sub_ln74_fu_293_p2");
    sc_trace(mVcdFile, select_ln74_fu_298_p3, "select_ln74_fu_298_p3");
    sc_trace(mVcdFile, icmp_ln15_fu_308_p2, "icmp_ln15_fu_308_p2");
    sc_trace(mVcdFile, xor_ln15_fu_304_p2, "xor_ln15_fu_304_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_444, "ap_condition_444");
    sc_trace(mVcdFile, ap_condition_450, "ap_condition_450");
    sc_trace(mVcdFile, ap_condition_455, "ap_condition_455");
    sc_trace(mVcdFile, ap_condition_460, "ap_condition_460");
#endif

    }
    mHdltvinHandle.open("top.hdltvin.dat");
    mHdltvoutHandle.open("top.hdltvout.dat");
}

top::~top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete perceptron_V_4_U;
    delete perceptron_V_0_U;
    delete perceptron_V_1_U;
    delete perceptron_V_2_U;
    delete perceptron_V_3_U;
    delete top_bp0_s_axi_U;
}

void top::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void top::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln70_1_reg_560 = add_ln70_1_fu_273_p2.read();
        bht_0_load_reg_499 = bht_0.read();
        bht_1_load_reg_504 = bht_1.read();
        bht_2_load_reg_529 = bht_2.read();
        bht_3_load_reg_535 = bht_3.read();
        perceptron_V_0_load_reg_513 = perceptron_V_0_q0.read();
        perceptron_V_1_load_reg_521 = perceptron_V_1_q0.read();
        perceptron_V_2_load_reg_544 = perceptron_V_2_q0.read();
        perceptron_V_3_load_reg_552 = perceptron_V_3_q0.read();
        t_V_reg_491 = perceptron_V_4_q0.read();
        tmp_reg_566 = add_ln70_1_fu_273_p2.read().range(5, 5);
        xor_ln60_1_reg_540 = xor_ln60_1_fu_209_p2.read();
        xor_ln60_reg_509 = xor_ln60_fu_187_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()))) {
        bht_0 = bht_1_load_reg_504.read();
        bht_1 = bht_2_load_reg_529.read();
        bht_2 = bht_3_load_reg_535.read();
        bht_3 = result_V_read_reg_483.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        perceptron_V_0_addr_reg_463 =  (sc_lv<6>) (zext_ln544_fu_166_p1.read());
        perceptron_V_1_addr_reg_468 =  (sc_lv<6>) (zext_ln544_fu_166_p1.read());
        perceptron_V_2_addr_reg_473 =  (sc_lv<6>) (zext_ln544_fu_166_p1.read());
        perceptron_V_3_addr_reg_478 =  (sc_lv<6>) (zext_ln544_fu_166_p1.read());
        perceptron_V_4_addr_reg_458 =  (sc_lv<6>) (zext_ln544_fu_166_p1.read());
        result_V_read_reg_483 = result_V.read();
    }
}

void top::thread_add_ln700_1_fu_384_p2() {
    add_ln700_1_fu_384_p2 = (!perceptron_V_0_load_reg_513.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<4>(): (sc_biguint<4>(perceptron_V_0_load_reg_513.read()) + sc_biguint<4>(ap_const_lv4_2));
}

void top::thread_add_ln700_2_fu_362_p2() {
    add_ln700_2_fu_362_p2 = (!perceptron_V_1_load_reg_521.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<4>(): (sc_biguint<4>(perceptron_V_1_load_reg_521.read()) + sc_biguint<4>(ap_const_lv4_2));
}

void top::thread_add_ln700_3_fu_432_p2() {
    add_ln700_3_fu_432_p2 = (!perceptron_V_2_load_reg_544.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<4>(): (sc_biguint<4>(perceptron_V_2_load_reg_544.read()) + sc_biguint<4>(ap_const_lv4_2));
}

void top::thread_add_ln700_4_fu_410_p2() {
    add_ln700_4_fu_410_p2 = (!perceptron_V_3_load_reg_552.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<4>(): (sc_biguint<4>(perceptron_V_3_load_reg_552.read()) + sc_biguint<4>(ap_const_lv4_2));
}

void top::thread_add_ln700_fu_336_p2() {
    add_ln700_fu_336_p2 = (!t_V_reg_491.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_bigint<4>(t_V_reg_491.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void top::thread_add_ln701_1_fu_373_p2() {
    add_ln701_1_fu_373_p2 = (!perceptron_V_0_load_reg_513.read().is_01() || !ap_const_lv4_E.is_01())? sc_lv<4>(): (sc_biguint<4>(perceptron_V_0_load_reg_513.read()) + sc_bigint<4>(ap_const_lv4_E));
}

void top::thread_add_ln701_2_fu_351_p2() {
    add_ln701_2_fu_351_p2 = (!perceptron_V_1_load_reg_521.read().is_01() || !ap_const_lv4_E.is_01())? sc_lv<4>(): (sc_biguint<4>(perceptron_V_1_load_reg_521.read()) + sc_bigint<4>(ap_const_lv4_E));
}

void top::thread_add_ln701_3_fu_421_p2() {
    add_ln701_3_fu_421_p2 = (!perceptron_V_2_load_reg_544.read().is_01() || !ap_const_lv4_E.is_01())? sc_lv<4>(): (sc_biguint<4>(perceptron_V_2_load_reg_544.read()) + sc_bigint<4>(ap_const_lv4_E));
}

void top::thread_add_ln701_4_fu_399_p2() {
    add_ln701_4_fu_399_p2 = (!perceptron_V_3_load_reg_552.read().is_01() || !ap_const_lv4_E.is_01())? sc_lv<4>(): (sc_biguint<4>(perceptron_V_3_load_reg_552.read()) + sc_bigint<4>(ap_const_lv4_E));
}

void top::thread_add_ln701_fu_325_p2() {
    add_ln701_fu_325_p2 = (!t_V_reg_491.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<4>(): (sc_bigint<4>(t_V_reg_491.read()) + sc_bigint<4>(ap_const_lv4_F));
}

void top::thread_add_ln70_1_fu_273_p2() {
    add_ln70_1_fu_273_p2 = (!sext_ln70_fu_269_p1.read().is_01() || !sext_ln1352_1_fu_241_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(sext_ln70_fu_269_p1.read()) + sc_bigint<6>(sext_ln1352_1_fu_241_p1.read()));
}

void top::thread_add_ln70_fu_263_p2() {
    add_ln70_fu_263_p2 = (!select_ln1352_1_fu_255_p3.read().is_01() || !sext_ln60_fu_175_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(select_ln1352_1_fu_255_p3.read()) + sc_bigint<5>(sext_ln60_fu_175_p1.read()));
}

void top::thread_and_ln15_fu_314_p2() {
    and_ln15_fu_314_p2 = (icmp_ln15_fu_308_p2.read() & xor_ln15_fu_304_p2.read());
}

void top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void top::thread_ap_condition_444() {
    ap_condition_444 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && esl_seteq<1,1,1>(xor_ln60_reg_509.read(), ap_const_lv1_1));
}

void top::thread_ap_condition_450() {
    ap_condition_450 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_reg_509.read()));
}

void top::thread_ap_condition_455() {
    ap_condition_455 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && esl_seteq<1,1,1>(xor_ln60_1_reg_540.read(), ap_const_lv1_1));
}

void top::thread_ap_condition_460() {
    ap_condition_460 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_1_reg_540.read()));
}

void top::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void top::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void top::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void top::thread_icmp_ln15_fu_308_p2() {
    icmp_ln15_fu_308_p2 = (!select_ln74_fu_298_p3.read().is_01() || !ap_const_lv6_8.is_01())? sc_lv<1>(): (sc_bigint<6>(select_ln74_fu_298_p3.read()) > sc_bigint<6>(ap_const_lv6_8));
}

void top::thread_icmp_ln887_1_fu_379_p2() {
    icmp_ln887_1_fu_379_p2 = (!perceptron_V_0_load_reg_513.read().is_01() || !ap_const_lv4_6.is_01())? sc_lv<1>(): (sc_bigint<4>(perceptron_V_0_load_reg_513.read()) < sc_bigint<4>(ap_const_lv4_6));
}

void top::thread_icmp_ln887_2_fu_357_p2() {
    icmp_ln887_2_fu_357_p2 = (!perceptron_V_1_load_reg_521.read().is_01() || !ap_const_lv4_6.is_01())? sc_lv<1>(): (sc_bigint<4>(perceptron_V_1_load_reg_521.read()) < sc_bigint<4>(ap_const_lv4_6));
}

void top::thread_icmp_ln887_3_fu_427_p2() {
    icmp_ln887_3_fu_427_p2 = (!perceptron_V_2_load_reg_544.read().is_01() || !ap_const_lv4_6.is_01())? sc_lv<1>(): (sc_bigint<4>(perceptron_V_2_load_reg_544.read()) < sc_bigint<4>(ap_const_lv4_6));
}

void top::thread_icmp_ln887_4_fu_405_p2() {
    icmp_ln887_4_fu_405_p2 = (!perceptron_V_3_load_reg_552.read().is_01() || !ap_const_lv4_6.is_01())? sc_lv<1>(): (sc_bigint<4>(perceptron_V_3_load_reg_552.read()) < sc_bigint<4>(ap_const_lv4_6));
}

void top::thread_icmp_ln887_fu_331_p2() {
    icmp_ln887_fu_331_p2 = (!t_V_reg_491.read().is_01() || !ap_const_lv4_6.is_01())? sc_lv<1>(): (sc_bigint<4>(t_V_reg_491.read()) < sc_bigint<4>(ap_const_lv4_6));
}

void top::thread_icmp_ln895_1_fu_368_p2() {
    icmp_ln895_1_fu_368_p2 = (!perceptron_V_0_load_reg_513.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): (sc_bigint<4>(perceptron_V_0_load_reg_513.read()) > sc_bigint<4>(ap_const_lv4_9));
}

void top::thread_icmp_ln895_2_fu_346_p2() {
    icmp_ln895_2_fu_346_p2 = (!perceptron_V_1_load_reg_521.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): (sc_bigint<4>(perceptron_V_1_load_reg_521.read()) > sc_bigint<4>(ap_const_lv4_9));
}

void top::thread_icmp_ln895_3_fu_416_p2() {
    icmp_ln895_3_fu_416_p2 = (!perceptron_V_2_load_reg_544.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): (sc_bigint<4>(perceptron_V_2_load_reg_544.read()) > sc_bigint<4>(ap_const_lv4_9));
}

void top::thread_icmp_ln895_4_fu_394_p2() {
    icmp_ln895_4_fu_394_p2 = (!perceptron_V_3_load_reg_552.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): (sc_bigint<4>(perceptron_V_3_load_reg_552.read()) > sc_bigint<4>(ap_const_lv4_9));
}

void top::thread_icmp_ln895_fu_320_p2() {
    icmp_ln895_fu_320_p2 = (!t_V_reg_491.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): (sc_bigint<4>(t_V_reg_491.read()) > sc_bigint<4>(ap_const_lv4_9));
}

void top::thread_index_V_fu_162_p1() {
    index_V_fu_162_p1 = pc_V.read().range(6-1, 0);
}

void top::thread_isBranch_V() {
    isBranch_V = (tmp_reg_566.read() ^ ap_const_lv1_1);
}

void top::thread_isBranch_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        isBranch_V_ap_vld = ap_const_logic_1;
    } else {
        isBranch_V_ap_vld = ap_const_logic_0;
    }
}

void top::thread_perceptron_V_0_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_reg_509.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_1_fu_368_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_reg_509.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_fu_379_p2.read())))) {
        perceptron_V_0_address0 = perceptron_V_0_addr_reg_463.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        perceptron_V_0_address0 =  (sc_lv<6>) (zext_ln544_fu_166_p1.read());
    } else {
        perceptron_V_0_address0 = "XXXXXX";
    }
}

void top::thread_perceptron_V_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_reg_509.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_1_fu_368_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_reg_509.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_fu_379_p2.read())))) {
        perceptron_V_0_ce0 = ap_const_logic_1;
    } else {
        perceptron_V_0_ce0 = ap_const_logic_0;
    }
}

void top::thread_perceptron_V_0_d0() {
    if (esl_seteq<1,1,1>(ap_condition_444.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_fu_342_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_fu_379_p2.read()))) {
            perceptron_V_0_d0 = add_ln700_1_fu_384_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_fu_342_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_1_fu_368_p2.read()))) {
            perceptron_V_0_d0 = add_ln701_1_fu_373_p2.read();
        } else {
            perceptron_V_0_d0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        perceptron_V_0_d0 =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_perceptron_V_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_reg_509.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_1_fu_368_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_reg_509.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_fu_379_p2.read())))) {
        perceptron_V_0_we0 = ap_const_logic_1;
    } else {
        perceptron_V_0_we0 = ap_const_logic_0;
    }
}

void top::thread_perceptron_V_1_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_reg_509.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_2_fu_346_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_reg_509.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_2_fu_357_p2.read())))) {
        perceptron_V_1_address0 = perceptron_V_1_addr_reg_468.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        perceptron_V_1_address0 =  (sc_lv<6>) (zext_ln544_fu_166_p1.read());
    } else {
        perceptron_V_1_address0 = "XXXXXX";
    }
}

void top::thread_perceptron_V_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_reg_509.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_2_fu_346_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_reg_509.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_2_fu_357_p2.read())))) {
        perceptron_V_1_ce0 = ap_const_logic_1;
    } else {
        perceptron_V_1_ce0 = ap_const_logic_0;
    }
}

void top::thread_perceptron_V_1_d0() {
    if (esl_seteq<1,1,1>(ap_condition_450.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_fu_342_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_2_fu_357_p2.read()))) {
            perceptron_V_1_d0 = add_ln700_2_fu_362_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_fu_342_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_2_fu_346_p2.read()))) {
            perceptron_V_1_d0 = add_ln701_2_fu_351_p2.read();
        } else {
            perceptron_V_1_d0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        perceptron_V_1_d0 =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_perceptron_V_1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_reg_509.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_2_fu_346_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_fu_342_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_reg_509.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_2_fu_357_p2.read())))) {
        perceptron_V_1_we0 = ap_const_logic_1;
    } else {
        perceptron_V_1_we0 = ap_const_logic_0;
    }
}

void top::thread_perceptron_V_2_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_1_reg_540.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_3_fu_416_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_1_reg_540.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_3_fu_427_p2.read())))) {
        perceptron_V_2_address0 = perceptron_V_2_addr_reg_473.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        perceptron_V_2_address0 =  (sc_lv<6>) (zext_ln544_fu_166_p1.read());
    } else {
        perceptron_V_2_address0 = "XXXXXX";
    }
}

void top::thread_perceptron_V_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_1_reg_540.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_3_fu_416_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_1_reg_540.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_3_fu_427_p2.read())))) {
        perceptron_V_2_ce0 = ap_const_logic_1;
    } else {
        perceptron_V_2_ce0 = ap_const_logic_0;
    }
}

void top::thread_perceptron_V_2_d0() {
    if (esl_seteq<1,1,1>(ap_condition_455.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_1_fu_390_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_3_fu_427_p2.read()))) {
            perceptron_V_2_d0 = add_ln700_3_fu_432_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_1_fu_390_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_3_fu_416_p2.read()))) {
            perceptron_V_2_d0 = add_ln701_3_fu_421_p2.read();
        } else {
            perceptron_V_2_d0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        perceptron_V_2_d0 =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_perceptron_V_2_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_1_reg_540.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_3_fu_416_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(xor_ln60_1_reg_540.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_3_fu_427_p2.read())))) {
        perceptron_V_2_we0 = ap_const_logic_1;
    } else {
        perceptron_V_2_we0 = ap_const_logic_0;
    }
}

void top::thread_perceptron_V_3_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_1_reg_540.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_4_fu_394_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_1_reg_540.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_4_fu_405_p2.read())))) {
        perceptron_V_3_address0 = perceptron_V_3_addr_reg_478.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        perceptron_V_3_address0 =  (sc_lv<6>) (zext_ln544_fu_166_p1.read());
    } else {
        perceptron_V_3_address0 = "XXXXXX";
    }
}

void top::thread_perceptron_V_3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_1_reg_540.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_4_fu_394_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_1_reg_540.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_4_fu_405_p2.read())))) {
        perceptron_V_3_ce0 = ap_const_logic_1;
    } else {
        perceptron_V_3_ce0 = ap_const_logic_0;
    }
}

void top::thread_perceptron_V_3_d0() {
    if (esl_seteq<1,1,1>(ap_condition_460.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_1_fu_390_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_4_fu_405_p2.read()))) {
            perceptron_V_3_d0 = add_ln700_4_fu_410_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_1_fu_390_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_4_fu_394_p2.read()))) {
            perceptron_V_3_d0 = add_ln701_4_fu_399_p2.read();
        } else {
            perceptron_V_3_d0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        perceptron_V_3_d0 =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_perceptron_V_3_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_1_reg_540.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_4_fu_394_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, xor_ln879_1_fu_390_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, xor_ln60_1_reg_540.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_4_fu_405_p2.read())))) {
        perceptron_V_3_we0 = ap_const_logic_1;
    } else {
        perceptron_V_3_we0 = ap_const_logic_0;
    }
}

void top::thread_perceptron_V_4_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, result_V_read_reg_483.read()) && 
          esl_seteq<1,1,1>(icmp_ln895_fu_320_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(result_V_read_reg_483.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_331_p2.read())))) {
        perceptron_V_4_address0 = perceptron_V_4_addr_reg_458.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        perceptron_V_4_address0 =  (sc_lv<6>) (zext_ln544_fu_166_p1.read());
    } else {
        perceptron_V_4_address0 = "XXXXXX";
    }
}

void top::thread_perceptron_V_4_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, result_V_read_reg_483.read()) && 
          esl_seteq<1,1,1>(icmp_ln895_fu_320_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(result_V_read_reg_483.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_331_p2.read())))) {
        perceptron_V_4_ce0 = ap_const_logic_1;
    } else {
        perceptron_V_4_ce0 = ap_const_logic_0;
    }
}

void top::thread_perceptron_V_4_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()))) {
        if ((esl_seteq<1,1,1>(result_V_read_reg_483.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_331_p2.read()))) {
            perceptron_V_4_d0 = add_ln700_fu_336_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, result_V_read_reg_483.read()) && 
                    esl_seteq<1,1,1>(icmp_ln895_fu_320_p2.read(), ap_const_lv1_1))) {
            perceptron_V_4_d0 = add_ln701_fu_325_p2.read();
        } else {
            perceptron_V_4_d0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        perceptron_V_4_d0 =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_perceptron_V_4_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, result_V_read_reg_483.read()) && 
          esl_seteq<1,1,1>(icmp_ln895_fu_320_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_314_p2.read()) && 
          esl_seteq<1,1,1>(result_V_read_reg_483.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_331_p2.read())))) {
        perceptron_V_4_we0 = ap_const_logic_1;
    } else {
        perceptron_V_4_we0 = ap_const_logic_0;
    }
}

void top::thread_select_ln1352_1_fu_255_p3() {
    select_ln1352_1_fu_255_p3 = (!bht_2.read()[0].is_01())? sc_lv<5>(): ((bht_2.read()[0].to_bool())? sub_ln1352_1_fu_249_p2.read(): sext_ln1352_2_fu_245_p1.read());
}

void top::thread_select_ln1352_fu_233_p3() {
    select_ln1352_fu_233_p3 = (!bht_0.read()[0].is_01())? sc_lv<5>(): ((bht_0.read()[0].to_bool())? sub_ln1352_fu_227_p2.read(): sext_ln1352_fu_223_p1.read());
}

void top::thread_select_ln60_1_fu_215_p3() {
    select_ln60_1_fu_215_p3 = (!xor_ln60_1_fu_209_p2.read()[0].is_01())? sc_lv<4>(): ((xor_ln60_1_fu_209_p2.read()[0].to_bool())? perceptron_V_2_q0.read(): perceptron_V_3_q0.read());
}

void top::thread_select_ln60_fu_193_p3() {
    select_ln60_fu_193_p3 = (!xor_ln60_fu_187_p2.read()[0].is_01())? sc_lv<4>(): ((xor_ln60_fu_187_p2.read()[0].to_bool())? perceptron_V_0_q0.read(): perceptron_V_1_q0.read());
}

void top::thread_select_ln74_fu_298_p3() {
    select_ln74_fu_298_p3 = (!tmp_reg_566.read()[0].is_01())? sc_lv<6>(): ((tmp_reg_566.read()[0].to_bool())? sub_ln74_fu_293_p2.read(): add_ln70_1_reg_560.read());
}

void top::thread_sext_ln1352_1_fu_241_p1() {
    sext_ln1352_1_fu_241_p1 = esl_sext<6,5>(select_ln1352_fu_233_p3.read());
}

void top::thread_sext_ln1352_2_fu_245_p1() {
    sext_ln1352_2_fu_245_p1 = esl_sext<5,4>(select_ln60_1_fu_215_p3.read());
}

void top::thread_sext_ln1352_fu_223_p1() {
    sext_ln1352_fu_223_p1 = esl_sext<5,4>(select_ln60_fu_193_p3.read());
}

void top::thread_sext_ln60_fu_175_p0() {
    sext_ln60_fu_175_p0 = perceptron_V_4_q0.read();
}

void top::thread_sext_ln60_fu_175_p1() {
    sext_ln60_fu_175_p1 = esl_sext<5,4>(sext_ln60_fu_175_p0.read());
}

void top::thread_sext_ln70_fu_269_p1() {
    sext_ln70_fu_269_p1 = esl_sext<6,5>(add_ln70_fu_263_p2.read());
}

void top::thread_sub_ln1352_1_fu_249_p2() {
    sub_ln1352_1_fu_249_p2 = (!ap_const_lv5_0.is_01() || !sext_ln1352_2_fu_245_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_0) - sc_bigint<5>(sext_ln1352_2_fu_245_p1.read()));
}

void top::thread_sub_ln1352_fu_227_p2() {
    sub_ln1352_fu_227_p2 = (!ap_const_lv5_0.is_01() || !sext_ln1352_fu_223_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_0) - sc_bigint<5>(sext_ln1352_fu_223_p1.read()));
}

void top::thread_sub_ln74_fu_293_p2() {
    sub_ln74_fu_293_p2 = (!ap_const_lv6_0.is_01() || !add_ln70_1_reg_560.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_0) - sc_biguint<6>(add_ln70_1_reg_560.read()));
}

void top::thread_xor_ln15_fu_304_p2() {
    xor_ln15_fu_304_p2 = (result_V_read_reg_483.read() ^ tmp_reg_566.read());
}

void top::thread_xor_ln60_1_fu_209_p2() {
    xor_ln60_1_fu_209_p2 = (bht_2.read() ^ bht_3.read());
}

void top::thread_xor_ln60_fu_187_p2() {
    xor_ln60_fu_187_p2 = (bht_0.read() ^ bht_1.read());
}

void top::thread_xor_ln879_1_fu_390_p2() {
    xor_ln879_1_fu_390_p2 = (bht_2_load_reg_529.read() ^ result_V_read_reg_483.read());
}

void top::thread_xor_ln879_fu_342_p2() {
    xor_ln879_fu_342_p2 = (bht_0_load_reg_499.read() ^ result_V_read_reg_483.read());
}

void top::thread_zext_ln544_fu_166_p1() {
    zext_ln544_fu_166_p1 = esl_zext<64,6>(index_V_fu_162_p1.read());
}

void top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<3>) ("XXX");
            break;
    }
}

void top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bp0_AWVALID\" :  \"" << s_axi_bp0_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bp0_AWREADY\" :  \"" << s_axi_bp0_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bp0_AWADDR\" :  \"" << s_axi_bp0_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bp0_WVALID\" :  \"" << s_axi_bp0_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bp0_WREADY\" :  \"" << s_axi_bp0_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bp0_WDATA\" :  \"" << s_axi_bp0_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bp0_WSTRB\" :  \"" << s_axi_bp0_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bp0_ARVALID\" :  \"" << s_axi_bp0_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bp0_ARREADY\" :  \"" << s_axi_bp0_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bp0_ARADDR\" :  \"" << s_axi_bp0_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bp0_RVALID\" :  \"" << s_axi_bp0_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bp0_RREADY\" :  \"" << s_axi_bp0_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bp0_RDATA\" :  \"" << s_axi_bp0_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bp0_RRESP\" :  \"" << s_axi_bp0_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bp0_BVALID\" :  \"" << s_axi_bp0_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bp0_BREADY\" :  \"" << s_axi_bp0_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bp0_BRESP\" :  \"" << s_axi_bp0_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

